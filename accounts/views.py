# accounts/views.py
from django.http import JsonResponse, HttpRequest
from django.views.decorators.csrf import csrf_exempt
from django.conf import settings
from django.db import connection               # ‚úÖ Django connection
from datetime import datetime
import json, re, time, requests

# helpers (–Å—Ä–¥–∞–º—á–∏ —Ñ—É–Ω–∫—Ü–∏—è–ª–∞—Ä)
LANG_MAP = {
    "uz": "uz",          # —û–∑–±–µ–∫ (–∫–∏—Ä–∏–ª–ª)
    "ru": "ru",
    "en": "en",
    "uz_lat": "uz_lat",  # —û–∑–±–µ–∫ (–ª–æ—Ç–∏–Ω)    
}

def start_text(lang: str) -> str:
    texts = {
        "uz": (
            "–†—û–π—Ö–∞—Ç–¥–∞–Ω —û—Ç–∏—à —É—á—É–Ω “õ—É–π–∏–¥–∞–≥–∏ —Ñ–æ—Ä–º–∞—Ç–¥–∞ —é–±–æ—Ä–∏–Ω–≥:\n"
            "/reg –§–ò–®; –í–∏–ª–æ—è—Ç; –®–∞“≥–∞—Ä —ë–∫–∏ —Ç—É–º–∞–Ω; –¢–µ–ª–µ—Ñ–æ–Ω; [–ü—Ä–æ–º–∫–æ–¥]; [–¢–∏–ª]\n\n"
            "–¢–∏–ª –≤–∞—Ä–∏–∞–Ω—Ç–ª–∞—Ä–∏: uz | ru | en | uz_lat\n"
            "–ú–∞—Å–∞–ª–∞–Ω:\n/reg –ö–∞–º–æ–ª –ö–∞–º–æ–ª–æ–≤; “ö–∞—à“õ–∞–¥–∞—Ä—ë –≤–∏–ª–æ—è—Ç–∏; –ö–æ—Å–æ–Ω; +998901234567; AGT-001; uz"
        ),
        "ru": (
            "–ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "/reg –§–ò–û; –û–±–ª–∞—Å—Ç—å; –ì–æ—Ä–æ–¥/—Ä–∞–π–æ–Ω; –¢–µ–ª–µ—Ñ–æ–Ω; [–ü—Ä–æ–º–æ–∫–æ–¥]; [–Ø–∑—ã–∫]\n\n"
            "–Ø–∑—ã–∫–∏: uz | ru | en | uz_lat\n"
            "–ü—Ä–∏–º–µ—Ä:\n/reg –ö–∞–º–æ–ª –ö–∞–º–æ–ª–æ–≤; –ö–∞—à–∫–∞–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å; –ö–æ—Å–æ–Ω; +998901234567; AGT-001; ru"
        ),
        "en": (
            "To register, send in this format:\n"
            "/reg Full name; Region; City/District; Phone; [Promocode]; [Lang]\n\n"
            "Languages: uz | ru | en | uz_lat\n"
            "Example:\n/reg Kamol Kamolov; Qashqadaryo region; Koson; +998901234567; AGT-001; en"
        ),
        "uz_lat": (
            "Ro'yxatdan o'tish uchun quyidagi formatda yuboring:\n"
            "/reg FISH; Viloyat; Shahar yoki tuman; Telefon; [Promkod]; [Til]\n\n"
            "Tilllar: uz | ru | en | uz_lat\n"
            "Masalan:\n/reg Kamol Kamolov; Qashqadaryo viloyati; Koson; +998901234567; AGT-001; uz_lat"
        ),
    }
    return texts.get(lang, texts["uz"])


def already_registered_text(lang: str, chat_id: int, phone: str | None = None) -> str:
    phone_line = f"üìû <code>{phone}</code>\n" if phone else ""
    texts = {
        "uz": (
            "–°–∏–∑ –∞–≤–≤–∞–ª —Ä—û–π—Ö–∞—Ç–¥–∞–Ω —û—Ç–≥–∞–Ω—Å–∏–∑ ‚úÖ\n"
            f"ID: <code>{chat_id}</code>\n"
            f"{phone_line}"
            "–ü–∞—Ä–æ–ª–Ω–∏ —É–Ω—É—Ç–≥–∞–Ω –±—û–ª—Å–∞–Ω–≥–∏–∑, –∏–ª–æ–≤–∞–≥–∞ –∫–∏—Ä–∏–± "
            "‚Äú–•–∞–≤—Ñ—Å–∏–∑–ª–∏–∫ ‚Üí –ü–∞—Ä–æ–ª–Ω–∏ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à‚Äù –±—û–ª–∏–º–∏ –æ—Ä“õ–∞–ª–∏ —è–Ω–≥–∏–ª–∞–Ω–≥."
        ),
        "ru": (
            "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã ‚úÖ\n"
            f"ID: <code>{chat_id}</code>\n"
            f"{phone_line}"
            "–ï—Å–ª–∏ –≤—ã –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å, –æ—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ —Å–º–µ–Ω–∏—Ç–µ –µ–≥–æ –≤ —Ä–∞–∑–¥–µ–ª–µ "
            "¬´–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Üí –°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å¬ª."
        ),
        "en": (
            "You are already registered ‚úÖ\n"
            f"ID: <code>{chat_id}</code>\n"
            f"{phone_line}"
            "If you forgot your password, open the app and change it under "
            "‚ÄúSecurity ‚Üí Change password‚Äù."
        ),
        "uz_lat": (
            "Siz avval ro'yxatdan o'tgansiz ‚úÖ\n"
            f"ID: <code>{chat_id}</code>\n"
            f"{phone_line}"
            "Parolni unutgan bo'lsangiz, ilovaga kirib "
            "‚ÄúXavfsizlik ‚Üí Parolni o‚Äòzgartirish‚Äù bo‚Äòlimi orqali yangilang."
        ),
    }
    return texts.get(lang, texts["uz"])


def parse_lang_and_promkod(parts: list[str]) -> tuple[list[str], str | None, str | None]:
    """Oxiridagi til kodini ajratib oladi; undan oldingi element promkod bo'lishi mumkin."""
    lang = None
    prom = None
    if parts and parts[-1].lower() in LANG_MAP:
        lang = LANG_MAP[parts[-1].lower()]
        parts = parts[:-1]
    if len(parts) >= 5 and parts[4]:
        prom = parts[4]
    return parts, lang, prom

def unknown_command_text(lang: str) -> str:
    texts = {
        "uz": (            
            "–ë—É –±–æ—Ç ‚ÄúSUV KERAK‚Äù –∏–ª–æ–≤–∞—Å–∏–¥–∞ —Ä—û–π—Ö–∞—Ç–¥–∞–Ω —û—Ç–∏—à –∞–º–∞–ª–ª–∞—Ä–∏–Ω–∏ –±–∞–∂–∞—Ä–∞–¥–∏. "
            "–ê–≥–∞—Ä —Å–∏–∑ —Å—É–≤ —Ç–∞—Ä“õ–∞—Ç–∏—à —Ñ–∞–æ–ª–∏—è—Ç–∏ –±–∏–ª–∞–Ω —à—É“ì—É–ª–ª–∞–Ω—Å–∞–Ω–≥–∏–∑, Google Play —ë–∫–∏ App Store'–¥–∞–Ω "
            "—Ç–µ–≥–∏—à–ª–∏ –∏–ª–æ–≤–∞–ª–∞—Ä–Ω–∏ —é–∫–ª–∞–± –æ–ª–∏–Ω–≥ –≤–∞ –±–æ—Ç–¥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω–∏–Ω–≥.\n\n"
            "–ò–ª–æ–≤–∞ 3 —Ç—É—Ä–¥–∞–≥–∏ —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä —É—á—É–Ω:\n"
            "‚Ä¢ <b>BOSS</b> ‚Äî –±–∏–∑–Ω–µ—Å —ç–≥–∞—Å–∏ –∏–ª–æ–≤–∞—Å–∏\n"
            "‚Ä¢ <b>MENEDJER</b> ‚Äî –∏—à –±–æ—à“õ–∞—Ä—É–≤—á–∏ –∏–ª–æ–≤–∞—Å–∏\n"
            "‚Ä¢ <b>COURIER</b> ‚Äî —Å—É–≤ —Ç–∞—Ä“õ–∞—Ç—É–≤—á–∏ –∫—É—Ä—å–µ—Ä –∏–ª–æ–≤–∞—Å–∏\n\n"
            "–¢–µ–≥–∏—à–ª–∏ –∏–ª–æ–≤–∞–Ω–∏ —é–∫–ª–∞–± –æ–ª–∏–Ω–≥ –≤–∞ —Ä—û–π—Ö–∞—Ç–¥–∞–Ω —û—Ç–∏–Ω–≥.\n"
            "–°–∞–≤–æ–ª–ª–∞—Ä–∏–Ω–≥–∏–∑ –±—û–ª—Å–∞, /savol –∫–æ–º–∞–Ω–¥–∞—Å–∏–¥–∞–Ω –∫–µ–π–∏–Ω —Å–∞–≤–æ–ª–∏–Ω–≥–∏–∑–Ω–∏ –≤–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∏–Ω–≥–∏–∑–Ω–∏ “õ–æ–ª–¥–∏—Ä–∏–Ω–≥ ‚Äî "
            "—Ö–æ–¥–∏–º–ª–∞—Ä–∏–º–∏–∑ –∞–ª–æ“õ–∞–≥–∞ —á–∏“õ–∏—à–∞–¥–∏ –≤–∞ –∏–º–∫–æ–Ω “õ–∞–¥–∞—Ä –∂–∞–≤–æ–± –±–µ—Ä–∏—à–∞–¥–∏.\n\n"
            "–ë–∞—Ç–∞—Ñ—Å–∏–ª: <a href=\"https://hisob.uz\">hisob.uz</a>\n\n"
            "–¢–∏–∂–æ—Ä–∞—Ç —Å–∏–∑–¥–∞–Ω, “≥–∏—Å–æ–±–∏ –±–∏–∑–¥–∞–Ω.\n"
            "–¢–∞–∫–æ–º–∏–ª–ª–∞—à—Ç–∏—Ä–∏—à–¥–∞ –¥–∞–≤–æ–º —ç—Ç–∞–º–∏–∑.\n\n__________________________________________\n\n\n"
                    
            "Bu bot ‚ÄúSUV KERAK‚Äù ilovasida ro‚Äòyxatdan o‚Äòtish amallarini bajaradi. "
            "Agar siz suv tarqatish faoliyati bilan shug‚Äòullansangiz, Google Play yoki App Store‚Äôdan "
            "tegishli ilovalarni yuklab oling va botdan foydalaning.\n\n"
            "Ilova 3 turdagi foydalanuvchilar uchun:\n"
            "‚Ä¢ <b>BOSS</b> ‚Äî biznes egasi ilovasi\n"
            "‚Ä¢ <b>MENEDJER</b> ‚Äî ish boshqaruvchi ilovasi\n"
            "‚Ä¢ <b>COURIER</b> ‚Äî suv tarqatuvchi kuryer ilovasi\n\n"
            "Tegishli ilovani yuklab oling va ro‚Äòyxatdan o‚Äòting.\n"
            "Savollaringiz bo‚Äòlsa, /savol komandasi dan keyin savolingizni va kontaktingizni qoldiring ‚Äî "
            "xodimlarimiz alo“õ–∞ qiladi va imkon qadar javob beradi.\n\n"
            "Batafsil: <a href=\"https://hisob.uz\">hisob.uz</a>\n\n"
            "Tijorat sizdan, hisobi bizdan.\n"            
            "Takomillashtirishda davom etamiz.\n\n____________________________________________________\n\n\n"
                
            "–≠—Ç–æ—Ç –±–æ—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç —à–∞–≥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ ¬´SUV KERAK¬ª. "
            "–ï—Å–ª–∏ –≤—ã –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å –¥–æ—Å—Ç–∞–≤–∫–æ–π –≤–æ–¥—ã, —Å–∫–∞—á–∞–π—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ Google Play –∏–ª–∏ App Store "
            "–∏ –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –±–æ—Ç–æ–º.\n\n"
            "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è 3 —Ç–∏–ø–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n"
            "‚Ä¢ <b>BOSS</b> ‚Äî –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–∏–∑–Ω–µ—Å–∞\n"
            "‚Ä¢ <b>MENEDJER</b> ‚Äî –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ (–º–µ–Ω–µ–¥–∂–µ—Ä–∞)\n"
            "‚Ä¢ <b>COURIER</b> ‚Äî –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫—É—Ä—å–µ—Ä–∞ –ø–æ –¥–æ—Å—Ç–∞–≤–∫–µ –≤–æ–¥—ã\n\n"
            "–°–∫–∞—á–∞–π—Ç–µ –Ω—É–∂–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.\n"
            "–ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /savol, –∑–∞—Ç–µ–º –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏ –∫–æ–Ω—Ç–∞–∫—Ç ‚Äî "
            "–Ω–∞—à–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å–≤—è–∂—É—Ç—Å—è —Å –≤–∞–º–∏ –∏ –æ—Ç–≤–µ—Ç—è—Ç.\n\n"
            "–ü–æ–¥—Ä–æ–±–Ω–µ–µ: <a href=\"https://hisob.uz\">hisob.uz</a>\n\n"
            "–ë–∏–∑–Ω–µ—Å ‚Äî —Å –≤–∞—Å, —É—á—ë—Ç ‚Äî —Å –Ω–∞—Å.\n"
            "–ú—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —É–ª—É—á—à–∞—Ç—å —Å–µ—Ä–≤–∏—Å.\n\n____________________________________________________\n\n\n"
                
            "This bot handles registration steps for the ‚ÄúSUV KERAK‚Äù app. "
            "If you work in water delivery, download the relevant apps from Google Play or the App Store "
            "and use the bot.\n\n"
            "The app supports 3 user types:\n"
            "‚Ä¢ <b>BOSS</b> ‚Äî business owner app\n"
            "‚Ä¢ <b>MENEDJER</b> ‚Äî manager app\n"
            "‚Ä¢ <b>COURIER</b> ‚Äî courier app for water delivery\n\n"
            "Download the appropriate app and register.\n"
            "If you have questions, use /savol and then send your question and contact details ‚Äî "
            "our team will reach out and reply.\n\n"
            "More details: <a href=\"https://hisob.uz\">hisob.uz</a>\n\n"
            "Business is yours, accounting is ours.\n"
            "We keep improving.\n\n____________________________________________________\n\n\n"
        ),
    }
    return texts.get(lang, texts["uz"])

# –í–µ–±—Ö—É–∫ —Å—É—Ä–æ–≤–∏–≥–∞ –∂–∞–≤–æ–± –±–µ—Ä—É–≤—á–∏ —Ñ—É–Ω–∫—Ü–∏—è
@csrf_exempt
def telegram_webhook(request):
    """
    Telegram webhook view for the ‚ÄúSUV KERAK‚Äù bot.

    “ö–∏—Å“õ–∞—á–∞
    -------
    Telegram‚Äôdan –∫–µ–ª–≥–∞–Ω update‚Äô–ª–∞—Ä–Ω–∏ (POST /webhook/) “õ–∞–±—É–ª “õ–∏–ª–∞–¥–∏, chat_id –≤–∞ –º–∞—Ç–Ω–Ω–∏ –∞–∂—Ä–∞—Ç–∞–¥–∏,
    —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏–Ω–≥ —Ç–∏–ª–∏–Ω–∏ accounts_business.lang –¥–∞–Ω –æ–ª–∞–¥–∏ –≤–∞ –±—É–π—Ä—É“õ“õ–∞ “õ–∞—Ä–∞–± –∂–∞–≤–æ–± —é–±–æ—Ä–∞–¥–∏.

    “ö—û–ª–ª–∞–±-“õ—É–≤–≤–∞—Ç–ª–∞–Ω–∞–¥–∏–≥–∞–Ω –±—É–π—Ä—É“õ–ª–∞—Ä
    --------------------------------
    ‚Ä¢ /start
        –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–≥–∞ —É–º—É–º–∏–π –º–∞—ä–ª—É–º–æ—Ç/–π—û—Ä–∏“õ–Ω–æ–º–∞ —Ö–∞–±–∞—Ä–∏–Ω–∏ —é–±–æ—Ä–∞–¥–∏ (unknown_command_text(lang)).
        (–≠—Å–ª–∞—Ç–º–∞: –ª–æ–≥–∏–∫–∞–Ω–≥–∏–∑–¥–∞ start_text() —û—Ä–Ω–∏–≥–∞ unknown_command_text() —é–±–æ—Ä–∏–ª–∞–¥–∏.)

    ‚Ä¢ /reg <FISH>; <Viloyat>; <Shahar/Tuman>; <Telefon>; [Promkod]; [Til]
        –ê–≥–∞—Ä —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –æ–ª–¥–∏–Ω —Ä—û–π—Ö–∞—Ç–¥–∞–Ω —û—Ç–≥–∞–Ω –±—û–ª—Å–∞ ‚Äî already_registered_text(lang, chat_id, phone) —é–±–æ—Ä–∏–ª–∞–¥–∏.
        –ê–∫—Å “≥–æ–ª–¥–∞ –±–µ–∫–µ–Ω–¥–≥–∞ {BACKEND_BASE_URL}/accounts/boss/register/ –≥–∞ JSON payload —é–±–æ—Ä–∏–ª–∞–¥–∏ –≤–∞
        “õ–∞–π—Ç–≥–∞–Ω ID/–ø–∞—Ä–æ–ª —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–≥–∞ –µ—Ç–∫–∞–∑–∏–ª–∞–¥–∏.

        –ú–∏—Å–æ–ª–ª–∞—Ä:
          /reg –ê—é–±–æ–≤ –≠–ª–±–µ–∫; “ö–∞—à“õ–∞–¥–∞—Ä—ë –≤–∏–ª–æ—è—Ç–∏; –ö–æ—Å–æ–Ω; +998991112233; uz
          /reg –ê—é–±–æ–≤ –≠–ª–±–µ–∫; “ö–∞—à“õ–∞–¥–∞—Ä—ë –≤–∏–ª–æ—è—Ç–∏; –ö–æ—Å–æ–Ω; +998991112233; ABC123; uz_lat

        –ò–∑–æ“≥:
          parse_lang_and_promkod(raw_parts) —ë—Ä–¥–∞–º—á–∏ —Ñ—É–Ω–∫—Ü–∏—è—Å–∏ –º–∞—Å—Å–∏–≤ –æ—Ö–∏—Ä–∏–¥–∞–Ω —Ç–∏–ª –≤–∞ –ø—Ä–æ–º–∫–æ–¥–Ω–∏ –∞–∂—Ä–∞—Ç–∏–± “õ–∞–π—Ç–∞—Ä–∞–¥–∏.
          –¢–∏–ª –∫–µ–ª–º–∞—Å–∞, –±–∞–∑–∞–¥–∞–≥–∏ lang —ë–∫–∏ "uz" “õ—û–ª–ª–∞–Ω–∞–¥–∏.

    ‚Ä¢ –ë–æ—à“õ–∞ –º–∞—Ç–Ω–ª–∞—Ä
        unknown_command_text(lang) —é–±–æ—Ä–∏–ª–∞–¥–∏.

    –ö–∏—Ä—É–≤—á–∏ –º–∞—ä–ª—É–º–æ—Ç (Telegram Update JSON)
    ---------------------------------------
    {
      "message": {
        "chat": {"id": <int>},
        "text": "<str>"
      }
    }

    –ß–µ—Ç–¥–∞–Ω –±–æ“ì–ª–∏“õ–ª–∏–∫–ª–∞—Ä
    -------------------
    ‚Ä¢ settings.TELEGRAM_BOT_TOKEN ‚Äî Telegram‚Äô–≥–∞ sendMessage —é–±–æ—Ä–∏—à —É—á—É–Ω
    ‚Ä¢ settings.BACKEND_BASE_URL   ‚Äî –±–µ–∫–µ–Ω–¥ API‚Äô—Å–∏–≥–∞ /accounts/boss/register/ POST “õ–∏–ª–∏—à —É—á—É–Ω

    “ö–∞–π—Ç–∞—Ä–∏–ª–∞–¥–∏–≥–∞–Ω –∂–∞–≤–æ–±
    --------------------
    JsonResponse({"ok": True}) ‚Äî –º—É–≤–∞—Ñ—Ñ–∞“õ–∏—è—Ç–ª–∏ –∏—à–ª–æ–≤–¥–∞–Ω —Å—û–Ω–≥ 200 —Å—Ç–∞—Ç—É—Å –±–∏–ª–∞–Ω.
    (Webhook —Ç–∞–ª–∞–±–∏–≥–∞ –∫—û—Ä–∞ Telegram 2xx –∫—É—Ç–∞–¥–∏; –∫–æ–¥–∏–Ω–≥–∏–∑–¥–∞ —Ö–∞—Ç–æ–ª–∏–∫ “õ–æ–ª—Å–∞ “≥–∞–º 200 “õ–∞–π—Ç–∞—Ä–∏—à —Ç–∞–≤—Å–∏—è —ç—Ç–∏–ª–∞–¥–∏.)

    –ü–∞—Ä–∞–º–µ—Ç—Ä–ª–∞—Ä
    -----------
    request : django.http.HttpRequest
        Telegram‚Äôdan –∫–µ–ª–≥–∞–Ω POST —Å—û—Ä–æ–≤.

    “ö–∞–π–¥–ª–∞—Ä
    -------
    ‚Ä¢ –¢–∏–ª accounts_business(lang) –¥–∞–Ω chat_id –±—û–π–∏—á–∞ –∞–Ω–∏“õ–ª–∞–Ω–∞–¥–∏.
    ‚Ä¢ send() –∏—á–∏–¥–∞ Telegram‚Äô–≥–∞ HTML parse_mode –±–∏–ª–∞–Ω —Ö–∞–±–∞—Ä —é–±–æ—Ä–∏–ª–∞–¥–∏.
    """
    # ... —Ñ—É–Ω–∫—Ü–∏—è –¥–∞–≤–æ–º–∏ ...

    data = json.loads(request.body.decode("utf-8") or "{}")
    msg  = data.get("message") or {}
    chat = msg.get("chat") or {}
    chat_id = chat.get("id")
    text = (msg.get("text") or "").strip()

    def send(txt: str):
        requests.post(
            f"https://api.telegram.org/bot{settings.TELEGRAM_BOT_TOKEN}/sendMessage",
            json={"chat_id": chat_id, "text": txt, "parse_mode": "HTML"},
            timeout=10,
        )

    if not chat_id:
        return JsonResponse({"ok": True})

    # --- lang'ni bazadan –æ–ª–∏—à (–∫—É—Ä—Å–æ—Ä –æ—á–∏–±)
    with connection.cursor() as cur:
        cur.execute("SELECT lang FROM public.accounts_business WHERE id=%s LIMIT 1", [chat_id])
        row = cur.fetchone()
    lang = (row[0] if row and row[0] else "uz")

    # /start ‚Äî 4 —Ç–∏–ª–¥–∞
    if text.lower().startswith("/start"):
        send(unknown_command_text(lang))
        return JsonResponse({"ok": True})

    # /reg ‚Äî —Ä—û–π—Ö–∞—Ç–¥–∞–Ω —û—Ç–∫–∞–∑–∏—à
    if text.lower().startswith("/reg"):
        # 0) –∞–≤–≤–∞–ª–¥–∞–Ω –±–æ—Ä-—ë“õ–ª–∏–≥–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à
        with connection.cursor() as cur:
            cur.execute("SELECT boss_tel_num FROM public.accounts_business WHERE id=%s LIMIT 1", [chat_id])
            row = cur.fetchone()

        if row:
            phone = row[0]
            msg = already_registered_text(lang, chat_id, phone)  # ‚úÖ –º–∞—Ç–Ω–Ω–∏ –æ–ª–∞–º–∏–∑
            send(msg)
            return JsonResponse({
            "ok": True,
            "already": True,
            "id": chat_id,
            "phone": phone,
            "lang": lang,
            "message": msg,              # ‚úÖ –ü–æ—Å—Ç–º–∞–Ω–≥–∞ “≥–∞–º —à—É –º–∞—Ç–Ω–Ω–∏ “õ–∞–π—Ç–∞—Ä—è–ø–º–∏–∑
            # "telegram": {"sent": ok, "meta": meta}  # (–∏—Ö—Ç–∏—ë—Ä–∏–π) –∞–≥–∞—Ä send() –Ω–∞—Ç–∏–∂–∞—Å–∏–Ω–∏ “õ–∞–π—Ç–∞—Ä–º–æ“õ—á–∏ –±—û–ª—Å–∞–Ω–≥–∏–∑
        }) 

        # 1) —Ç–∏–ª –≤–∞ –ø—Ä–æ–º–∫–æ–¥–Ω–∏ –ø–∞—Ä—Å “õ–∏–ª–∏—à
        raw_parts = [p.strip() for p in text[5:].split(";")]
        parts, lang_param, promkod = parse_lang_and_promkod(raw_parts)  # sizdagi —ë—Ä–¥–∞–º—á–∏ —Ñ—É–Ω–∫—Ü–∏—è
        if len(parts) < 4:
            # –µ—Ç–º–∞—Å–∞–¥–∞, –º–∞–≤–∂—É–¥/lang –±—û–π–∏—á–∞ —Å—Ç–∞—Ä—Ç —Ö–∞–±–∞—Ä–∏–Ω–∏ —é–±–æ—Ä–∏–± “õ—û—è–º–∏–∑
            send(start_text(lang))
            return JsonResponse({"ok": True})

        payload = {
            "tg_id": chat_id,
            "full_name": parts[0],
            "viloyat": parts[1],
            "shahar_yoki_tuman": parts[2],
            "phone": parts[3],
            # —Ç–∏–ª–Ω–∏ –±–µ–∫–µ–Ω–¥–≥–∞ “≥–∞–º —É–∑–∞—Ç–∞–º–∏–∑: –∫–µ–ª–≥–∞–Ω –±—û–ª—Å–∞ ‚Äî —à—É, –±—û–ª–º–∞—Å–∞ –º–∞–≤–∂—É–¥/lang
            "lang": (lang_param or lang),
        }
        if promkod:
            payload["promkod"] = promkod

        url = f"{settings.BACKEND_BASE_URL}/accounts/boss/register/"
        try:
            resp = requests.post(url, json=payload, timeout=12)
            if resp.status_code == 200:
                j = resp.json()
                send(
                    "Ro'yxatdan o'tdingiz ‚úÖ\n"
                    f"ID: <code>{j['id']}</code>\n"
                    f"Parol: <code>{j['password']}</code>"
                )
            else:
                send(f"Xatolik: {resp.text}")
        except Exception as e:
            send(f"Server bilan ulanishda xatolik: {e}")

        return JsonResponse({"ok": True})

    send(unknown_command_text(lang))
    return JsonResponse({"ok": True})


WEEKDAY_UZ_ABBR = ["du", "se", "ch", "pa", "ju", "sh", "ya"]

def _normalize_phone(raw: str) -> str:
    """
    –¢–µ–ª–µ—Ñ–æ–Ω —Ä–∞“õ–∞–º–∏–Ω–∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è “õ–∏–ª–∞–¥–∏.

    –ù–∏–º–∞ “õ–∏–ª–∞–¥–∏:
      - –ú–∞—Ç–Ω–¥–∞–Ω —Ä–∞“õ–∞–º–ª–∞—Ä –≤–∞ '+' –Ω–∏ —Å–∞“õ–ª–∞–± “õ–æ–ª–∞–¥–∏.
      - –ê–≥–∞—Ä —Ä–∞“õ–∞–º '998' –±–∏–ª–∞–Ω –±–æ—à–ª–∞–Ω—Å–∞ –≤–∞ –±–æ—à–∏–¥–∞ '+' –±—û–ª–º–∞—Å–∞ ‚Üí '+998‚Ä¶'–≥–∞ –∞–π–ª–∞–Ω—Ç–∏—Ä–∞–¥–∏.

    –ü–∞—Ä–∞–º–µ—Ç—Ä–ª–∞—Ä:
      raw (str): –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –∫–∏—Ä–∏—Ç–≥–∞–Ω —Ç–µ–ª–µ—Ñ–æ–Ω (—ç—Ä–∫–∏–Ω —Ñ–æ—Ä–º–∞—Ç–¥–∞).

    “ö–∞–π—Ç–∞—Ä–∏–ª–∞–¥–∏:
      str: –ù–æ—Ä–º–∞–ª–ª–∞—à–≥–∞–Ω —Ç–µ–ª–µ—Ñ–æ–Ω (–º–∞—Å–∞–ª–∞–Ω, '+998991234567'); —Ö–∞—Ç–æ/–±—û—à –±—û–ª—Å–∞ ‚Äî –±—û—à —Å–∞—Ç—Ä–∏.
    """
    
    if not raw: return ""
    s = re.sub(r"[^\d+]", "", str(raw))
    if not s: return ""
    if not s.startswith("+") and s.startswith("998"):
        s = "+" + s
    return s

def _make_password(user_id: int) -> str:
    """
    –í–∞“õ—Ç–∏–Ω—á–∞–ª–∏–∫ –ø–∞—Ä–æ–ª —è—Ä–∞—Ç–∞–¥–∏ (“õ–∏—Å“õ–∞, –∏–Ω—Å–æ–Ω —û“õ–∏–π–¥–∏–≥–∞–Ω —Ñ–æ—Ä–º–∞—Ç).

    –§–æ—Ä–º—É–ª–∞:
      <ID–Ω–∏–Ω–≥ –∏–ª–∫ 2 —Ä–∞“õ–∞–º–∏><–∫—É–Ω DD><“≥–∞—Ñ—Ç–∞ –∫—É–Ω–∏ “õ–∏—Å“õ–∞—Ä—Ç–º–∞—Å–∏>

    –ú–∞—Å–∞–ª–∞–Ω:
      user_id=74213, —Å–∞–Ω–∞ 12-–∫—É–Ω, –∂—É–ºa ('Ju') ‚Üí '7412Ju'

    –≠—Å–ª–∞—Ç–º–∞:
      WEEKDAY_UZ_ABBR –∏–Ω–¥–µ–∫—Å–∏ 0‚Äì6 (–¥—É—à‚Äì—è–∫) –±—û–π–∏—á–∞ –∏—à–ª–∞–π–¥–∏.

    –ü–∞—Ä–∞–º–µ—Ç—Ä–ª–∞—Ä:
      user_id (int): –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ (Telegram) ID‚Äô–∏.

    “ö–∞–π—Ç–∞—Ä–∏–ª–∞–¥–∏:
      str: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è “õ–∏–ª–∏–Ω–≥–∞–Ω –≤–∞“õ—Ç–∏–Ω—á–∞–ª–∏–∫ –ø–∞—Ä–æ–ª.
    """
    now = datetime.now()
    return f"{str(user_id)[:2]}{now.day:02d}{WEEKDAY_UZ_ABBR[now.weekday()]}"

def _send_tg_message(chat_id: int, text: str) -> tuple[bool, str]:
    """
    Telegram'–≥–∞ sendMessage —é–±–æ—Ä–∏—à (rate-limit‚Äô–Ω–∏ –∏–Ω–æ–±–∞—Ç–≥–∞ –æ–ª–≥–∞–Ω “≥–æ–ª–¥–∞).

    –ù–∏–º–∞ “õ–∏–ª–∞–¥–∏:
      - settings.TELEGRAM_BOT_TOKEN –æ—Ä“õ–∞–ª–∏ /sendMessage “õ–∏–ª–∞–¥–∏.
      - 429 (Too Many Requests) –±—û–ª—Å–∞, `retry_after` –≥–∞ “õ–∞—Ä–∞–± 1 –º–∞—Ä—Ç–∞ –∫–µ–π–∏–Ω—Ä–æ“õ “õ–∞–π—Ç–∞ —É—Ä–∏–Ω–∞–¥–∏.
      - –ò—Å—Ç–∏—Å–Ω–æ –∑–∞—Ä—É—Ä “≥–æ–ª–ª–∞—Ä–¥–∞ –∏—Å—Ç–∏—Å–Ω–æ —Ç–∞—à–ª–∞–º–∞–π–¥–∏ ‚Äî (False, —Å–∞–±–∞–±) “õ–∞–π—Ç–∞—Ä–∞–¥–∏.

    –ü–∞—Ä–∞–º–µ—Ç—Ä–ª–∞—Ä:
      chat_id (int): “ö–∞–±—É–ª “õ–∏–ª—É–≤—á–∏ —á–∞—Ç ID‚Äô–∏.
      text (str): –Æ–±–æ—Ä–∏–ª–∞–¥–∏–≥–∞–Ω —Ö–∞–±–∞—Ä (HTML parse_mode).

    “ö–∞–π—Ç–∞—Ä–∏–ª–∞–¥–∏:
      tuple[bool, str]:
        - 1-—ç–ª–µ–º–µ–Ω—Ç: –º—É–≤–∞—Ñ—Ñ–∞“õ–∏—è—Ç (True/False)
        - 2-—ç–ª–µ–º–µ–Ω—Ç: Telegram –∂–∞–≤–æ–±–∏ –º–∞—Ç–Ω–∏ —ë–∫–∏ —Å–∞–±–∞–± ('NO_TOKEN', 'REQUEST_ERROR: ‚Ä¶', –≤–∞ “≥.–∫.)

    –≠—Å–ª–∞—Ç–º–∞:
      `disable_web_page_preview=True` ‚Äî “≥–∞–≤–æ–ª–∞ –ø—Ä–µ–≤—å—é–ª–∞—Ä–∏ —û—á–∏—Ä–∏–ª–≥–∞–Ω.
    """
    token = getattr(settings, "TELEGRAM_BOT_TOKEN", "") or ""
    if not token:
        return False, "NO_TOKEN"
    url = f"https://api.telegram.org/bot{token}/sendMessage"
    payload = {"chat_id": chat_id, "text": text, "parse_mode": "HTML", "disable_web_page_preview": True}
    for attempt in range(2):
        try:
            r = requests.post(url, json=payload, timeout=10)
            if r.status_code == 429:
                retry = (r.json().get("parameters", {}) or {}).get("retry_after", 2)
                time.sleep(int(retry)); continue
            return (r.status_code == 200 and r.json().get("ok") is True), r.text
        except requests.RequestException as e:
            if attempt == 0: time.sleep(2); continue
            return False, f"REQUEST_ERROR: {e}"
    return False, "UNKNOWN_ERROR"

@csrf_exempt
def register_boss(request: HttpRequest, payload: str = ""):
    """
    BOSS (–±–∏–∑–Ω–µ—Å —ç–≥–∞—Å–∏) —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏—Å–∏–Ω–∏ —Ä—û–π—Ö–∞—Ç–¥–∞–Ω —û—Ç–∫–∞–∑–∏—à –≤–∞ —É–Ω–≥–∞ Telegram —Ö–∞–±–∞—Ä–∏–Ω–∏ —é–±–æ—Ä–∏—à.

    –ö–∏—Ä–∏—à —Ñ–æ—Ä–º–∞—Ç–ª–∞—Ä–∏:
      1) payload (–±–æ—Ç–¥–∞–Ω –∫–µ–ªadigan “õ–∏—Å“õ–∞ —Ñ–æ—Ä–º–∞—Ç):
         "tg_id/full_name/viloyat/nomi/phone[/promkod]"
      2) JSON/POST (frontend —ë–∫–∏ –±–æ—Ç–¥–∞–Ω JSON):
         {
           "tg_id": int,
           "full_name": str,
           "viloyat": str,
           "shahar_yoki_tuman": str,
           "phone": str,
           "promkod": str | null,      # –∏—Ö—Ç–∏—ë—Ä–∏–π
           "lang": "uz|uz_lat|ru|en"   # –∏—Ö—Ç–∏—ë—Ä–∏–π, –¥–µ—Ñ–æ–ª—Ç 'uz'
         }

    –ê—Å–æ—Å–∏–π “õ–∞–¥–∞–º–ª–∞—Ä:
      ‚Ä¢ –¢–∏–ª–Ω–∏ (lang) —Ç–µ–∫—à–∏—Ä–∏—à: {'uz','uz_lat','ru','en'}; –Ω–æ—Ç—û“ì—Ä–∏ –±—û–ª—Å–∞ ‚Äî 'uz'.
      ‚Ä¢ –î—É–±–ª–∏–∫–∞—Ç ID –±–æ—Ä-–π—û“õ–ª–∏–≥–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à (accounts_business.id).
      ‚Ä¢ geo_list –±—û–π–∏—á–∞ 'nomi' —à–∞“≥armi/—Ç—É–º–∞–Ω–º–∏ –∞–Ω–∏“õ–ª–∞—à.
      ‚Ä¢ –ü—Ä–æ–º–∫–æ–¥ –∫–µ–ª—Å–∞ ‚Äî agent_account‚Äô–¥–∞–Ω –∞–≥–µ–Ω—Ç–Ω–∏ —Ç–æ–ø–∏—à.
      ‚Ä¢ accounts_business‚Äô–≥–∞ UPSERT:
          - (id, name, viloyat, shaxar, tuman, boss_tel_num, agent_name, agent_promkod, lang)
          - –∞–≥–∞—Ä lang —É—Å—Ç—É–Ω–∏ –π—û“õ –±—û–ª—Å–∞, –¥–∏–Ω–∞–º–∏–∫ —Ç–∞—Ä–∑–¥–∞ “õ—û—à–∏–ª–∞–¥–∏ (+ –∏–Ω–¥–µ–∫—Å).
      ‚Ä¢ –ü–∞—Ä–æ–ª–Ω–∏ `_make_password()` –æ—Ä“õ–∞–ª–∏ —è–Ω–≥–∏–ª–∞—à.
      ‚Ä¢ –ê–≥–∞—Ä –ø—Ä–æ–º–∫–æ–¥ –±—û–ª—Å–∞ ‚Äî agent_account.business_id JSONB–≥–∞ –±–∏—Ä–∏–∫—Ç–∏—Ä–∏—à.
      ‚Ä¢ –°—û–Ω–≥ —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–≥–∞ Telegram –æ—Ä“õ–∞–ª–∏ 4 —Ç–∏–ª–¥–∞–Ω –±–∏—Ä–∏–¥–∞ —Ç–∞–π—ë—Ä –º–∞—Ç–Ω —é–±–æ—Ä–∏—à.

    “ö–∞–π—Ç–∞—Ä–∏–ª–∞–¥–∏:
      200 OK, JSON:
        - {"ok": True, "id": <int>, "password": <str>, "tg_sent": <bool>}
        - –ê–≥–∞—Ä –∞–≤–≤–∞–ª–¥–∞–Ω –º–∞–≤–∂—É–¥ –±—û–ª—Å–∞: {"ok": True, "already": True, "id": tg_id}
      4xx ‚Äî –≤–∞–ª–∏–¥–∞—Ü–∏—è/–º–∞—ä–ª—É–º–æ—Ç —Ç–æ–ø–∏–ª–º–∞–¥–∏ (–º–∞—Å–∞–ª–∞–Ω, geo_list).
      500 ‚Äî –∏—á–∫–∏ —Ö–∞—Ç–æ–ª–∏–∫ (–∏—Å—Ç–∏—Å–Ω–æ —É—à–ª–∞–Ω–∏–±, detail “õ–∞–π—Ç–∞—Ä–∏–ª–∞–¥–∏).

    –ò–∑–æ“≥:
      ‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω `_normalize_phone()` –±–∏–ª–∞–Ω —Ç–æ–∑–∞–ª–∞–Ω–∞–¥–∏.
      ‚Ä¢ –•–∞–±–∞—Ä –º–∞—Ç–Ω–∏ HTML parse_mode‚Äô–¥–∞ —é–±–æ—Ä–∏–ª–∞–¥–∏.
    """
    try:
        # --- lang –Ω–∏ –æ–ª–∞–º–∏–∑ (–¥–µ—Ñ–æ–ª—Ç: uz)
        if payload:
            data = {}
            lang = "uz"
        else:
            data = request.POST.dict() or (json.loads(request.body.decode("utf-8")) if request.body else {})
            lang = (data.get("lang") or "uz").strip()

        # –†—É—Ö—Å–∞—Ç —ç—Ç–∏–ª–≥–∞–Ω —Ç–∏–ª–ª–∞—Ä
        allowed_langs = {"uz", "uz_lat", "ru", "en"}
        if lang not in allowed_langs:
            lang = "uz"

        # --- –∞–≤–≤–∞–ª ID –¥—É–±–ª–∏–∫–∞—Ç —Ç–µ–∫—à–∏—Ä—É–≤–∏
        with connection.cursor() as cur:
            tg_id = None
            if payload:
                parts = [p.strip() for p in payload.split("/") if p.strip()]
                if len(parts) >= 1:
                    tg_id = int(parts[0])
            else:
                tg_id = int(data.get("tg_id") or 0)

            if tg_id:
                cur.execute("SELECT 1 FROM public.accounts_business WHERE id=%s", [tg_id])
                if cur.fetchone():
                    # –º–∞–≤–∂—É–¥ –±—û–ª—Å–∞ ‚Äî —á–∏“õ–∏–± –∫–µ—Ç–∞–º–∏–∑
                    return JsonResponse({"ok": True, "already": True, "id": tg_id})

        # --- input –ø–∞—Ä—Å–∏–Ω–≥
        tg_id = full_name = viloyat = nomi = phone = promkod = None
        if payload:
            parts = [p.strip() for p in payload.split("/") if p.strip()]
            if len(parts) < 5:
                return JsonResponse({"detail": "–ú–∞—ä–ª—É–º–æ—Ç –µ—Ç–∞—Ä–ª–∏ —ç–º–∞—Å (payload)."}, status=400)
            tg_id, full_name, viloyat, nomi, phone = int(parts[0]), parts[1], parts[2], parts[3], parts[4]
            promkod = parts[5] if len(parts) >= 6 and parts[5] else None
        else:
            tg_id     = int(data.get("tg_id"))
            full_name = (data.get("full_name") or "").strip()
            viloyat   = (data.get("viloyat") or "").strip()
            nomi      = (data.get("shahar_yoki_tuman") or "").strip()
            phone     = (data.get("phone") or "").strip()
            promkod   = (data.get("promkod") or None) or None

        if not all([tg_id, full_name, viloyat, nomi, phone]):
            return JsonResponse({"detail": "–ú–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä —Ç—û–ª–∏“õ —ç–º–∞—Å."}, status=400)

        phone_norm = _normalize_phone(phone)

        # --- DB (UPSERT –ª–æ–≥–∏–∫–∞—Å–∏)
        with connection.cursor() as cur:
            # 0) –ö–µ—Ä–∞–∫ –±—û–ª—Å–∞ lang —É—Å—Ç—É–Ω–∏–Ω–∏ —è—Ä–∞—Ç–∏–± “õ—û—è–º–∏–∑
            cur.execute("""
                DO $$
                BEGIN
                    IF NOT EXISTS (
                        SELECT 1 FROM information_schema.columns
                        WHERE table_schema='public' AND table_name='accounts_business' AND column_name='lang'
                    ) THEN
                        ALTER TABLE public.accounts_business ADD COLUMN lang varchar(10);
                        CREATE INDEX IF NOT EXISTS idx_business_lang ON public.accounts_business(lang);
                    END IF;
                END $$;
            """)

            # 1) geo_list–¥–∞–Ω —Ç—É—Ä–∏–Ω–∏ –∞–Ω–∏“õ–ª–∞—à
            cur.execute("""
                SELECT shaxar_yoki_tuman
                  FROM public.geo_list
                 WHERE lower(viloyat)=lower(%s)
                   AND lower(shaxar_yoki_tuman_nomi)=lower(%s)
                 LIMIT 1
            """, [viloyat.strip(), nomi.strip()])
            row = cur.fetchone()
            if not row:
                return JsonResponse({"detail": f"geo_list –¥–∞ —Ç–æ–ø–∏–ª–º–∞–¥–∏: {viloyat} / {nomi}"}, status=404)

            turi = row[0]
            shahar = nomi if turi == "—à–∞“≥–∞—Ä" else None
            tuman  = nomi if turi == "—Ç—É–º–∞–Ω" else None

            # 2) –ø—Ä–æ–º–∫–æ–¥ –±—û–ª—Å–∞ ‚Äî –∞–≥–µ–Ω—Ç
            agent_name = None
            if promkod:
                cur.execute("SELECT id, agent_name FROM public.agent_account WHERE agent_promkod=%s LIMIT 1", [promkod])
                a = cur.fetchone()
                if not a:
                    return JsonResponse({"detail": "–ü—Ä–æ–º–∫–æ–¥ —Ç–æ–ø–∏–ª–º–∞–¥–∏."}, status=400)
                agent_name = a[1]

            # 3) accounts_business UPSERT ‚Äî –¢–ò–õ–ù–ò “≤–ê–ú –°–ê“ö–õ–ê–ô–ú–ò–ó
            cur.execute("""
                INSERT INTO public.accounts_business
                    (id, name, viloyat, shaxar, tuman, boss_tel_num, agent_name, agent_promkod, lang)
                VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s)
                ON CONFLICT (id) DO UPDATE SET
                    name=EXCLUDED.name,
                    viloyat=EXCLUDED.viloyat,
                    shaxar=EXCLUDED.shaxar,
                    tuman=EXCLUDED.tuman,
                    boss_tel_num=EXCLUDED.boss_tel_num,
                    agent_name=COALESCE(EXCLUDED.agent_name, public.accounts_business.agent_name),
                    agent_promkod=COALESCE(EXCLUDED.agent_promkod, public.accounts_business.agent_promkod),
                    lang=EXCLUDED.lang
                RETURNING id
            """, [tg_id, full_name, viloyat, shahar, tuman, phone_norm, agent_name, promkod, lang])
            user_id = int(cur.fetchone()[0])

            # 4) –ø–∞—Ä–æ–ª
            password = _make_password(user_id)
            cur.execute("UPDATE public.accounts_business SET password=%s WHERE id=%s", [password, user_id])

            # 5) –∞–≥–µ–Ω—Ç JSONB –±–∏—Ä–∏–∫—Ç–∏—Ä–∏—à
            if promkod:
                cur.execute("""
                    UPDATE public.agent_account
                       SET business_id = COALESCE(business_id, '{}'::jsonb)
                                         || jsonb_build_object(%s::text, %s::text)
                     WHERE agent_promkod=%s
                """, [full_name, str(tg_id), promkod])

        # --- Telegram —Ö–∞–±–∞—Ä (—Å–∞“õ–ª–∞–Ω–≥–∞–Ω/lang‚Äô–¥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω–∞–º–∏–∑)
        messages = {
            "uz": (
                f"“≤—É—Ä–º–∞—Ç–ª–∏ —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏, —Å–∏–∑ <code>{tg_id}</code> ID —Ä–∞“õ–∞–º–∏ –±–∏–ª–∞–Ω —Ä—û–π—Ö–∞—Ç–¥–∞–Ω —û—Ç–¥–∏–Ω–≥–∏–∑ ‚úÖ\n\n"
                f"üõ° –°–∏–∑–Ω–∏–Ω–≥ –≤–∞“õ—Ç–∏–Ω—á–∞–ª–∏–∫ –ø–∞—Ä–æ–ª–∏–Ω–≥–∏–∑:\nüîë <code>{password}</code>\n\n"
                f"üõ° –°–∏–∑–Ω–∏–Ω–≥ –∫–æ–Ω—Ç–∞–∫—Ç–∏–Ω–≥–∏–∑:\nüìû <code>{phone_norm}</code>\n\n"
                f"üõ° –°–∏–∑ <code>BOSS (–±–∏–∑–Ω–µ—Å—Å —ç–≥–∞—Å–∏)</code> —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ —Ç—É—Ä–∏–¥–∞ —Ä—û–π—Ö–∞—Ç–¥–∞–Ω —û—Ç–¥–∏–Ω–≥–∏–∑.\n\n"
                f"–ò–ª–æ–≤–∞–Ω–∏–Ω–≥ ‚Äú–•–∞–≤—Ñ—Å–∏–∑–ª–∏–∫ ‚Üí –ü–∞—Ä–æ–ª–Ω–∏ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à‚Äù –±—û–ª–∏–º–∏ –æ—Ä“õ–∞–ª–∏ —û–∑ –ø–∞—Ä–æ–ª–∏–Ω–≥–∏–∑–Ω–∏ —è–Ω–≥–∏–ª–∞—à–Ω–∏ —Ç–∞–≤—Å–∏—è “õ–∏–ª–∞–º–∏–∑."
            ),
            "uz_lat": (
                f"Hurmatli foydalanuvchi, siz <code>{tg_id}</code> ID raqami bilan ro‚Äòyxatdan o‚Äòtdingiz ‚úÖ\n\n"
                f"üõ° Sizning vaqtinchalik parolingiz:\nüîë <code>{password}</code>\n\n"
                f"üõ° Sizning kontaktingiz:\nüìû <code>{phone_norm}</code>\n\n"
                f"üõ° Siz <code>BOSS (biznes egasi)</code> foydalanuvchi turida ro‚Äòyxatdan o‚Äòtdingiz.\n\n"
                f"Ilovaning ‚ÄúXavfsizlik ‚Üí Parolni o‚Äòzgartirish‚Äù bo‚Äòlimi orqali o‚Äòz parolingizni yangilashingizni tavsiya qilamiz."
            ),
            "ru": (
                f"–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å —Å ID <code>{tg_id}</code> ‚úÖ\n\n"
                f"üõ° –í–∞—à –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å:\nüîë <code>{password}</code>\n\n"
                f"üõ° –í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç:\nüìû <code>{phone_norm}</code>\n\n"
                f"üõ° –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ <code>BOSS (–≤–ª–∞–¥–µ–ª–µ—Ü –±–∏–∑–Ω–µ—Å–∞)</code>.\n\n"
                f"–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Üí –°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å¬ª."
            ),
            "en": (
                f"Dear user, you have successfully registered with ID <code>{tg_id}</code> ‚úÖ\n\n"
                f"üõ° Your temporary password:\nüîë <code>{password}</code>\n\n"
                f"üõ° Your contact:\nüìû <code>{phone_norm}</code>\n\n"
                f"üõ° You are registered as <code>BOSS (business owner)</code>.\n\n"
                f"We recommend changing your password in the app section ‚ÄúSecurity ‚Üí Change Password‚Äù."
            ),
        }
        text = messages.get(lang, messages["uz"])

        ok, _ = _send_tg_message(tg_id, text)
        return JsonResponse({"ok": True, "id": user_id, "password": password, "tg_sent": ok}, status=200)

    except Exception as e:
        return JsonResponse({"detail": f"–ò—á–∫–∏ —Ö–∞—Ç–æ–ª–∏–∫: {e}"}, status=500)
