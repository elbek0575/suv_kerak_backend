from django.db import models
from django.core.exceptions import ValidationError

class CashBoss(models.Model):
    id = models.BigAutoField(primary_key=True)      # bigserial
    sana = models.DateField()                       # date
    vaqt = models.TimeField()                       # time

    boss_id = models.BigIntegerField()
    boss_name = models.CharField(max_length=55)

    client_tg_id = models.BigIntegerField()
    client_tel_num = models.CharField(max_length=15)

    buyurtma_num = models.BigIntegerField()
    kuryer_id = models.BigIntegerField()
    kuryer_name = models.CharField(max_length=55)

    income = models.DecimalField(max_digits=14, decimal_places=2, default=0)   # –∫–∏—Ä–∏–º
    expense = models.DecimalField(max_digits=14, decimal_places=2, default=0)  # —á–∏“õ–∏–º
    balance = models.DecimalField(max_digits=14, decimal_places=2, default=0)  # “õ–æ–ª–¥–∏“õ

    OPERATION_CHOICES = [
        ("income", "Income"),
        ("expense", "Expense"),
    ]
    cash_operation = models.CharField(max_length=10, choices=OPERATION_CHOICES)

    # üü¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∫ –∏–∑–æ“≥ (–ª–æ–≥) ‚Äî –æ–ø–µ—Ä–∞—Ü–∏—è–≥–∞ “õ–∞—Ä–∞–± —Ç—û–ª–∞–¥–∏
    cash_message = models.CharField(max_length=255, blank=True)

    grated = models.DateTimeField(auto_now_add=True)  # timestamp

    class Meta:
        db_table = "cash_boss"
        verbose_name = "Boss Kassa"
        verbose_name_plural = "Boss Kassalari"
        indexes = [
            models.Index(fields=["boss_id"], name="idx_cashboss_boss"),
            models.Index(fields=["client_tel_num"], name="idx_cashboss_client_tel"),
            models.Index(fields=["kuryer_id"], name="idx_cashboss_kuryer"),
        ]

    def __str__(self):
        return f"{self.sana} {self.vaqt} - Boss: {self.boss_name} | Balance: {self.balance}"

    # ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è: income/expense –º—É–≤–æ—Ñ–∏“õ–ª–∏–≥–∏
    def clean(self):
        super().clean()
        if self.cash_operation == "income":
            if self.income <= 0:
                raise ValidationError("Income –æ–ø–µ—Ä–∞—Ü–∏—è—Å–∏–¥–∞ 'income' > 0 –±—û–ª–∏—à–∏ –∫–µ—Ä–∞–∫.")
            if self.expense > 0:
                raise ValidationError("Income –æ–ø–µ—Ä–∞—Ü–∏—è—Å–∏–¥–∞ 'expense' 0 –±—û–ª–∏—à–∏ –∫–µ—Ä–∞–∫.")
        if self.cash_operation == "expense":
            if self.expense <= 0:
                raise ValidationError("Expense –æ–ø–µ—Ä–∞—Ü–∏—è—Å–∏–¥–∞ 'expense' > 0 –±—û–ª–∏—à–∏ –∫–µ—Ä–∞–∫.")
            if self.income > 0:
                raise ValidationError("Expense –æ–ø–µ—Ä–∞—Ü–∏—è—Å–∏–¥–∞ 'income' 0 –±—û–ª–∏—à–∏ –∫–µ—Ä–∞–∫.")

    # ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∫ —Ö–∞–±–∞—Ä —Ç–∞–π—ë—Ä–ª–∞—à
    def save(self, *args, **kwargs):
        if self.cash_operation == "income":
            self.cash_message = f"–ö—É—Ä–µ—Ä {self.kuryer_name} –¥–∞–Ω –∫–∏—Ä–∏–º –±—É–ª–¥–∏"
        elif self.cash_operation == "expense":
            self.cash_message = "–ù–∞“õ–¥ –ø—É–ª —Ç–æ–ø—à–∏—Ä–∏–ª–¥–∏"
        super().save(*args, **kwargs)
